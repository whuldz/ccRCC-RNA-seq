library(cowplot)
library(ggsignif)
library(ggsci)
library(oncoPredict)
library(data.table)
library(gtools)
library(reshape2)
library(ggpubr)
library(tidyverse)
library(dplyr)
rm(list = ls()) 

th=theme(axis.text.x = element_text(angle = 45,vjust = 0.5))
GDSC2_Expr = readRDS(file=file.path(dir,'GDSC2_Expr (RMA Normalized and Log Transformed).rds'))
GDSC2_Res = readRDS(file = file.path(dir,"GDSC2_Res.rds"))
GDSC2_Res <- exp(GDSC2_Res) 

KIRC_tpm=read.csv("E:/Rwork/newbulk/KIRC/tpmdata/KIRC_tpm.csv",row.names = 1)
KIRC_T_tpm=read.csv("E:/Rwork/newbulk/KIRC/tpmdata/KIRC_T_tpm.csv",row.names = 1)
KIRC_N_tpm=read.csv("E:/Rwork/newbulk/KIRC/tpmdata/KIRC_N_tpm.csv",row.names = 1)

KIRC_T_tpm=as.matrix(KIRC_T_tpm)
KIRC_N_tpm=as.matrix(KIRC_N_tpm)
KIRC_tpm=as.matrix(KIRC_tpm)
KIRC_tpm=na.omit(KIRC_tpm)

calcPhenotype(trainingExprData = GDSC2_Expr_KIDNEY,
              trainingPtype = GDSC2_Res_KIDNEY_clean,
              testExprData = KIRC_T_tpm,
              batchCorrect = 'eb',  #   "eb" for ComBat
              powerTransformPhenotype = TRUE,
              removeLowVaryingGenes = 0.2,
              minNumSamples = 10,
              printOutput = TRUE,
              removeLowVaringGenesFrom = 'rawData' )


result_all=read.csv("calcPhenotype_Output/DrugPredictions.csv",row.names = 1)
result_tumor=read.csv("calcPhenotype_Output/DrugPredictions.csv",row.names = 1)


KIRC_batch=read.csv("E:/Rwork/newbulk/KIRC/tpmdata/KIRC_batch.csv",row.names = 1)
KIRC_batch=KIRC_batch[rownames(KIRC_batch) %in% rownames(result_all),]
table(KIRC_batch$type)
FABP7_expression <- t(KIRC_T_tpm["FABP7", ])
high_expression_samples <- colnames(KIRC_T_tpm)[FABP7_expression > median(FABP7_expression)]
low_expression_samples <- colnames(KIRC_T_tpm)[FABP7_expression <= median(FABP7_expression)]
KIRC_batch_FABP7 <- data.frame(
  Sample = colnames(KIRC_T_tpm),
  Group = NA
)
KIRC_batch_FABP7$Group = ifelse(KIRC_batch_FABP7$Sample %in% high_expression_samples,"high","low")
table(KIRC_batch_FABP7$Group)
rownames(KIRC_batch_FABP7)=KIRC_batch_FABP7$Sample
RASD1_expression <- t(KIRC_T_tpm["RASD1", ])
high_expression_samples <- colnames(KIRC_T_tpm)[RASD1_expression > median(RASD1_expression)]
low_expression_samples <- colnames(KIRC_T_tpm)[RASD1_expression <= median(RASD1_expression)]
KIRC_batch_RASD1 <- data.frame(
  Sample = colnames(KIRC_T_tpm),
  Group = NA
)
KIRC_batch_RASD1$Group = ifelse(KIRC_batch_RASD1$Sample %in% high_expression_samples,"high","low")
table(KIRC_batch_RASD1$Group)
rownames(KIRC_batch_RASD1)=KIRC_batch_RASD1$Sample

result_all <- result_all[rownames(KIRC_batch), ]
result_all$type <- KIRC_batch$type
significant_all_results <- data.frame(Drug = character(), p_value = numeric(), stringsAsFactors = FALSE)
for (drug in colnames(result_all)[-ncol(result_all)]) {
  group1 <- result_all[result_all$type == "KIRC_N", drug]
  group2 <- result_all[result_all$type == "KIRC_T", drug]
  
  wilcox_test_result <- wilcox.test(group1, group2)
  significant_all_results <- rbind(significant_all_results, 
                                   data.frame(Drug = drug, p_value = wilcox_test_result$p.value))
}
significant_all_drugs <- significant_all_results %>%
  mutate(p_adj = p.adjust(p_value, method = "fdr")) %>%  
  filter(p_adj < 0.05)  

result_tumor <- result_tumor[rownames(KIRC_batch_FABP7), ]
result_tumor$type <- KIRC_batch_FABP7$Group
significant_FABP7_results <- data.frame(Drug = character(), p_value = numeric(), stringsAsFactors = FALSE)

for (drug in colnames(result_tumor)[-ncol(result_tumor)]) {
  group1 <- result_tumor[result_tumor$type == "low", drug]
  group2 <- result_tumor[result_tumor$type == "high", drug]
  
  wilcox_test_result <- wilcox.test(group1, group2)
  significant_FABP7_results <- rbind(significant_FABP7_results, 
                                     data.frame(Drug = drug, p_value = wilcox_test_result$p.value))
}

significant_FABP7_drugs <- significant_FABP7_results %>%
  mutate(p_adj = p.adjust(p_value, method = "fdr")) %>%  # FDR校正
  filter(p_adj < 0.05)  # 使用校正后阈值

result_tumor1 <- result_tumor[rownames(KIRC_batch_RASD1), ]
result_tumor1$type <- KIRC_batch_RASD1$Group
significant_RASD1_results <- data.frame(Drug = character(), p_value = numeric(), stringsAsFactors = FALSE)
for (drug in colnames(result_tumor1)[-ncol(result_tumor1)]) {
  group1 <- result_tumor1[result_tumor1$type == "low", drug]
  group2 <- result_tumor1[result_tumor1$type == "high", drug]
  
  wilcox_test_result <- wilcox.test(group1, group2)
  significant_RASD1_results <- rbind(significant_RASD1_results, 
                                     data.frame(Drug = drug, p_value = wilcox_test_result$p.value))
}

significant_RASD1_drugs <- significant_RASD1_results %>%
  mutate(p_adj = p.adjust(p_value, method = "fdr")) %>%  # FDR校正
  filter(p_adj < 0.05)  # 使用校正后阈值



intersection1=intersect(significant_FABP7_drugs$Drug,significant_all_drugs$Drug)
intersection2=intersect(significant_RASD1_drugs$Drug,significant_all_drugs$Drug)
intersection_final=intersect(intersection1,intersection2)

final_drug=c("Foretinib_2040","Rapamycin_1084")

library(tidyr)
library(tidyr)
library(ggplot2)
library(ggpubr)
final_drug=c("Foretinib_2040","Rapamycin_1084")
result_tumor_long <- pivot_longer(result_tumor, 
                                  cols = c(final_drug),  
                                  names_to = "drug", 
                                  values_to = "value")

result_tumor_long <- result_tumor_long %>%
  group_by(type, drug) %>%  
  mutate(
    Q1 = quantile(value, 0.25, na.rm = TRUE),
    Q3 = quantile(value, 0.75, na.rm = TRUE),
    IQR = Q3 - Q1,
    is_outlier = value < (Q1 - 1.5*IQR) | value > (Q3 + 1.5*IQR)
  )

library(dplyr)
library(ggplot2)
library(ggpubr)
filtered_data <- result_tumor_long %>%
  filter(!is_outlier)

count_data <- filtered_data %>%
  group_by(drug, type) %>%
  summarise(n = n(), y_pos = max(value, na.rm = TRUE) * 1.05, .groups = "drop")

ggplot(filtered_data, aes(x = type, y = value, fill = type)) +
  geom_boxplot(outlier.shape = NA, width = 0.6, alpha = 0.8) +
  geom_jitter(aes(color = type), width = 0.2, size = 1.2, alpha = 0.6, show.legend = FALSE) +
  stat_compare_means(method = "wilcox.test", 
                     comparisons = list(c("high", "low")), 
                     label = "p.signif", size = 5) +
  geom_text(data = count_data,
            aes(x = type, y = y_pos, label = paste0("n = ", n)),
            inherit.aes = FALSE,
            size = 4, vjust = 0) +
  facet_wrap(~drug, scales = "free_y") +
  labs(title = "",
      x = "", 
      y = "Estimated IC50"  
      ) + theme_minimal()

getwd()
result_tumor$type
FABP7_table=result_tumor[,c("Foretinib_2040","Rapamycin_1084","type")]
write.csv(FABP7_table,file = "./final_result/FABP7_table.csv")
RASD1_table=result_tumor1[,c("Foretinib_2040","Rapamycin_1084","type")]
write.csv(RASD1_table,file = "./final_result/RASD1_table.csv")